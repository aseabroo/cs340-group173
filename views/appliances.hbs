<!DOCTYPE html>
<!--
  # Function showform controls visibility of different sections. Helper functions that use showform are implemented as well.
  # Date: 12/11/2023
  # Originality: Adapted from stackoverflow. Recycled the function to suit the needs for the page.
  # Source URL: https://stackoverflow.com/questions/14681660/show-form-elements-using-javascript
 
  # Function resetAndBrowse resets the add appliance form and navigates to browsing view
  # Date: 12/11/2023
  # Originality: Adapted from stackoverflow. Recycled function to suit the needs of the application.
  # Source URL: https://stackoverflow.com/questions/8152904/call-a-function-after-form-reset
 
  # Function filterAppliances filters the appliance list based on the model entered in the box
  # Date: 12/11/2023
  # Originality: Adapted from stackoverflow. Recycled the function to suit the needs of the application.
  # Source URL: https://stackoverflow.com/questions/3065342/how-do-i-iterate-through-table-rows-and-cells-in-javascript
 -->
<html>
<head>
  <title>Appliances</title>
  <link href="style.css" rel="stylesheet" type="text/css" />
  <script language="JavaScript">
    // Function to control the visibility of different sections
    function showform(dowhat) {
      const sections = ['browse', 'insert', 'update', 'delete'];
      sections.forEach(section => {
        // Show the seciton if it matches the action or if 'all' is specified
          document.getElementById(section).style.display = dowhat === section || dowhat === 'all' ? 'block' : 'none';
      });
    }

    // Resets the add appliance form and navigates back to the browsing view
    function resetAndBrowse() {
      document.getElementById('addAppliance').reset();
      browseAppliances();
    }

    // Filters the appliance list based on the model entered in the box
    function filterAppliances() {
      const input = document.getElementById("searchBox").value.toUpperCase();
      const rows = document.getElementById("applianceTable").getElementsByTagName("tr");
      
      // Iterate through each row in the table to filter the data
      for (let i = 1; i < rows.length; i++) {
          const modelCell = rows[i].getElementsByTagName("td")[3];
          if (modelCell) {
              const txtValue = modelCell.textContent || modelCell.innerText;
              // Dispaly the row if the model matches the search input
              rows[i].style.display = txtValue.toUpperCase().indexOf(input) > -1 ? "" : "none";
          }
      }
    }

    // Helper functions to show specific forms or sections based on user interaction
    function newAppliance() { showform('insert'); }
    function updateAppliance(applianceID) { 
      // Display the update form
      showform('update'); 
      
      // Set the vaue of the applianceIDSelect dropdown to the selected applianceID
      document.getElementById('applianceIDSelect').value = applianceID;
      }
    function deleteAppliance(pid) { showform('delete'); }
    function browseAppliance() { showform('browse'); }
    function showAll() { showform('all'); }
  </script>
</head>

<body onload="browseAppliance()">
  <h1>Appliances</h1>
  <nav>
      [ <a href="users">Users</a> | <a href="appliances">Appliances</a> | <a href="ota_updates">OTA_Updates</a>  | <a href="customerservices">CustomerServices</a> | <a href="ota_updatesappliances">OTA_UpdatesAppliances</a>  ]
  </nav>
  <div id="browse">
    <p><a href="#" onClick="showAll()">Display all forms</a></p>
    <!-- Search input field -->
    <input type="text" id="searchBox" onkeyup="filterAppliances()" placeholder="Search by Model...">
    <div id="searchResults"></div>
      
    <!-- Handlebars templating to create the table to appliances in the database -->
    <table border="1" cellpadding="5" id="applianceTable">
      <tr>
        <th>Edit</th> <!-- Header is for the Edit link -->
        <th>Delete</th> <!-- Header is for the Delete button -->
        <th>Appliance ID</th>
        <th>Model</th>
        <th>Date Purchased</th>
        <th>Last Updated</th>
        <th>User ID</th>
      </tr>
      <!-- Dynamically generate table rows -->
      {{#each appliancesData}}
      <tr data-value={{this.applianceID}}>
        <td><a href="#" onClick="updateAppliance('{{this.applianceID}}')">Edit</a></td>
        <td><button onclick="deleteAppliance({{this.applianceID}})">Delete</button></td>
        <!-- Data fields -->
        <td align="right" >{{this.applianceID}}</td>
        <td >{{this.model}}</td>
        <td >{{this.datePurchased}}</td>
        <td>{{this.lastUpdated}}</td>
        <td>{{this.userID}}</td>
      </tr>
      {{/each}}
    </table>
  <script src="./js/delete_appliance.js"></script>
  </div> 
  
  <div id="insert">
      <form method="POST" id="addAppliance">
        <!-- Form fields for adding a new appliance -->
          <legend><strong>Add Appliance</strong></legend>
          <fieldset class="fields">
            <label> User ID </label> 
            <select name="userID" id="input-userID">
              <option value="">Select a User</option>
              {{#each userIDs}}
              <option value="{{this.userID}}">{{this.userID}}</option>
              {{/each}}
            </select>
            <label> Model </label> <input type="text" name="model" id="input-model">
            <label>Date Purchased </label> <input type="date" name="datePurchased" id="input-datePurchased">
            <label> Last Updated </label> <input type="date" name="lastUpdated" id="input-lastUpdated" >
        </fieldset>
        <input class="btn" type="submit" id="addAppliance" value="Add Appliance">
        <input class="btn" type="button" value="cancel" onClick="resetAndBrowse()">
      </form> 
      <script src="./js/add_appliance.js"></script>
  </div>
  <div id="update">
      <form method="POST" id="update-appliance-form-ajax">
        <!-- Form fields for updating an appliance -->
        <legend><strong>Update Appliance</strong></legend>
        <fieldset class="fields">
          <label for="input-applianceID"> Appliance ID: </label>
          <select name="input-applianceID" id="applianceIDSelect">
            <option value="test">Select an Appliance ID</option>
            {{#each appliancesData}}
            <option value="{{this.applianceID}}">{{this.applianceID}}</option>
            {{/each}}
          </select>

          
          <label> Model </label> <input type="text" name="model" id="input-modelUpdate">
          <label> Date Purchased </label> <input type="date" name="datePurchased" id="input-datePurchasedUpdate" value="2021-03-15">
          <label> Last Updated </label> <input type="date" name="lastUpdated" id="input-lastUpdatedUpdate" value="2023-03-21">

        <label for="input-userID"> User ID: </label>

          <select id="input-userIDUpdate" name="userIDSelect">
            <option value="test">Select a User ID</option>
            {{#each appliancesData}}
            <option value="{{this.userID}}">{{this.userID}}</option>
            {{/each}}
          </select>
        </fieldset>
          <input class="btn" type="submit" id="update-appliance-form-ajax" value="Save Update Appliance">
          <input class="btn" type="button" value="cancel" onClick="browseAppliances()">
        </form>
        <script src="./js/update_appliance.js"></script>
  </div>
</body>
</html>
